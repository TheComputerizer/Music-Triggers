{
  "command.musictriggers.help": "Valid Commands: `/musictriggers player reload` `/mt player reload` `/musictriggers player debug` `/mt player debug` `/musictriggers player commandtrigger identifier` `/mt player commandtrigger identifier`",
  "command.musictriggers.player.error": "Command had invalid player selector! See the log for more specific information",
  "command.musictriggers.success.debug": "Successfully toggled Music Triggers debug overlay!",
  "command.musictriggers.success.reload": "Successfully triggered Music Triggers reload!",
  "command.musictriggers.success.trigger": "Successfully triggered Music Triggers command trigger!",
  "command.musictriggers.trigger.error": "Usage: `/musictriggers player commandtrigger identifier` or `/mt player commandtrigger identifier`",
  "command.musictriggers.trigger.not_set": "not_set is an invalid identifier for the command trigger!",
  "record.musictriggers.test": "Hello There",
  "itemGroup.musictriggers": "Music Triggers",
  "item.musictriggers.custom_record": "Custom Music Disc",
  "item.musictriggers.blank_record": "Blank Music Disc",
  "item.musictriggers.blank_record.description": "Can be imbued with a music recorder",
  "item.musictriggers.custom_record.name": "Custom Music Disc",
  "item.musictriggers.custom_record.blank_description": "Add tracks via the jukebox config and give this the corresponding NBT data",
  "item.musictriggers.music_triggers_record": "Enhanced Music Disc",
  "item.musictriggers.music_triggers_record.blank_description": "No track stored",
  "item.musictriggers.music_triggers_record.description": "Track",
  "block.musictriggers.music_recorder": "Music Recorder",
  "key.musictriggers.gui": "Open Music Triggers GUI",
  "key.categories.musictriggers": "Music Triggers",
  "misc.musictriggers.reload_start": "Reloading Music... This will not take long...",
  "misc.musictriggers.reload_finished": "Finished!",
  "gui.musictriggers.disabled": "Disabled by Configuration",
  "gui.musictriggers.popup.yes": "Yes",
  "gui.musictriggers.popup.no": "No",
  "gui.musictriggers.popup.confirm.name": "You have unsaved changes! Are you sure you want to exit?",
  "gui.musictriggers.popup.edit.name": "Please input the desired channel name",
  "gui.musictriggers.popup.error.duplicate.name": "Channel name already exists!",
  "gui.musictriggers.popup.error.blank.name": "Channel name cannot be blank!",
  "gui.musictriggers.popup.error.title": "Error",
  "gui.musictriggers.titles.debug.name": "Debug",
  "gui.musictriggers.titles.debug.desc": "Edit global configurations found within the debug file",
  "gui.musictriggers.titles.registration.name": "Registration",
  "gui.musictriggers.titles.registration.desc": "Toggle music disc registration and client-side only functionality. Requires a restart to take effect",
  "gui.musictriggers.titles.channel.name": "Channel",
  "gui.musictriggers.titles.channel.desc": "Add, remove, or edit channels. Edit existing song configurations or add new ones. Edit commands, toggles, and redirect configurations.",
  "gui.musictriggers.titles.channel_info": "Channel Info",
  "gui.musictriggers.titles.channel_info.name": "Channel Info",
  "gui.musictriggers.titles.channel_info.desc": "Edit channel specific information",
  "gui.musictriggers.titles.jukebox.name": "Jukebox Config",
  "gui.musictriggers.titles.jukebox.desc": "Assign and edit lang keys for custom music discs",
  "gui.musictriggers.titles.main.name": "Main Config",
  "gui.musictriggers.titles.main.desc": "Edit existing song configurations or add new ones.",
  "gui.musictriggers.titles.transitions.name": "Transitions Config",
  "gui.musictriggers.titles.transitions.desc": "Edit existing title and image cards or add new ones. Images for image cards are read in from a resource pack under the folder musictriggers/textures.",
  "gui.musictriggers.titles.commands.name": "Commands Config",
  "gui.musictriggers.titles.commands.desc": "Edit existing command configurations or add new ones.",
  "gui.musictriggers.titles.toggles.name": "Toggles Config",
  "gui.musictriggers.titles.toggles.desc": "Edit existing toggle configurations or add new ones.",
  "gui.musictriggers.titles.redirect.name": "Redirect",
  "gui.musictriggers.titles.redirect.desc": "Configure redirect variables pointing to external links or sounds registered to the vanilla sound system. These variables can then be used as song names in the other config files.",
  "gui.musictriggers.button.apply_changes": "Apply Changes",
  "gui.musictriggers.button.apply_changes.desc1": "Save and apply all changes made within the gui.",
  "gui.musictriggers.button.apply_changes.desc2": "Anything that errors will be automatically disabled",
  "gui.musictriggers.button.apply_changes.desc3": "and logged before having a chance to crash.",
  "gui.musictriggers.button.back": "Back",
  "gui.musictriggers.button.add_command": "Add Command",
  "gui.musictriggers.button.add_command.hover": "Add a new command that can run when a trigger or set of triggers activates.",
  "gui.musictriggers.button.edit.desc1": "Edit Song Configurations",
  "gui.musictriggers.button.edit.desc2": "Edit existing song configurations or add new ones",
  "gui.musictriggers.button.edit.desc3": "All config files can be edited here",
  "gui.musictriggers.button.edit_add": "Add Channel",
  "gui.musictriggers.button.add_channel.hover1": "You can directly backspace and start typing here",
  "gui.musictriggers.button.add_channel.hover2": "This will be the name of the new audio channel",
  "gui.musictriggers.button.add_channel.hover3": "Click this when you are finished to confirm your selection",
  "gui.musictriggers.button.add_channel.hover4": "The channel name must be unique and the action will fail if it is not",
  "gui.musictriggers.button.delete_mode": "Delete Mode",
  "gui.musictriggers.button.delete_mode.desc1": "Click to activate/deactivate delete mode.",
  "gui.musictriggers.button.delete_mode.desc2": "When active, clicking on an element that can",
  "gui.musictriggers.button.delete_mode.desc3": "be removed will delete it. Red text = active",
  "gui.musictriggers.button.jukebox.add": "Add Record Entry",
  "gui.musictriggers.button.jukebox.view_mode": "View Mode",
  "gui.musictriggers.button.jukebox.view_mode.desc1": "Click to toggle whether to view all or entries or only new ones.",
  "gui.musictriggers.button.log.desc1": "Log visualizer",
  "gui.musictriggers.button.log.desc2": "See important information since the last reload.",
  "gui.musictriggers.button.add_link": "Add Link",
  "gui.musictriggers.button.add_link.hover": "Add a new link to be defined for this trigger",
  "gui.musictriggers.button.add_loop": "Add Loop",
  "gui.musictriggers.button.add_loop.hover": "Add a new loop to be defined for this song",
  "gui.musictriggers.button.parameter_list.add": "Add Parameter Element",
  "gui.musictriggers.button.playback.desc1": "Playback Information",
  "gui.musictriggers.button.playback.desc2": "Shows the time and name of the currently playing song.",
  "gui.musictriggers.button.playback.desc3": "Allows you to skip or reset the current song.",
  "gui.musictriggers.button.add_external": "Add URL Reference",
  "gui.musictriggers.button.add_external.hover": "Add a reference to a song via a URL such as a YouTube or SoundCloud link.",
  "gui.musictriggers.button.add_internal": "Add Sound Resource",
  "gui.musictriggers.button.add_internal.hover": "Add a reference to a sound registered within the vanilla sound engine.",
  "gui.musictriggers.button.add_jukebox": "Add Custom Record",
  "gui.musictriggers.button.add_jukebox.hover": "Add a new custom record via a reference to an audio file",
  "gui.musictriggers.button.reload.desc1": "Reload Configurations",
  "gui.musictriggers.button.reload.desc2": "Reloads all of the config files from the mod",
  "gui.musictriggers.button.reload.desc3": "Applies any changes made within the gui",
  "gui.musictriggers.button.reload.desc4": "Remember to reload text edits first!",
  "gui.musictriggers.button.reset_song.desc1": "Reset Song",
  "gui.musictriggers.button.reset_song.desc2": "Replay the currently playing song from the beginning",
  "gui.musictriggers.button.selected_channel": "Selected Channel",
  "gui.musictriggers.button.selected_channel.desc1": "Click to cycle through registered channels",
  "gui.musictriggers.button.skip_song.desc1": "Skip Song",
  "gui.musictriggers.button.skip_song.desc2": "Skip the currently playing song",
  "gui.musictriggers.button.sort.original": "Sort Type: Original",
  "gui.musictriggers.button.sort.alphabetical": "Sort Type: Alphabetical",
  "gui.musictriggers.button.sort.reverse": "Sort Type: Reverse Alphabetical",
  "gui.musictriggers.button.sort.desc1": "Determined how the elements are sorted for display.",
  "gui.musictriggers.button.sort.desc2": "Clicking will cycle between the 3 options of original,",
  "gui.musictriggers.button.sort.desc3": "alphabetical, and reverse alphabetical.",
  "gui.musictriggers.button.add_toggle": "Add Toggle",
  "gui.musictriggers.button.add_toggle.hover": "Add a new toggle set to determine when triggers are able to activate.",
  "gui.musictriggers.button.add_condition": "Add Toggle Condition",
  "gui.musictriggers.button.add_condition.hover": "Add a new condition from the accepted list if there are any left to add",
  "gui.musictriggers.button.add_card": "Add Title/Image Card",
  "gui.musictriggers.button.add_card.hover": "The view mode determines which card type will be added",
  "gui.musictriggers.button.title_view": "View Mode: Title Cards",
  "gui.musictriggers.button.image_view": "View Mode: Image Cards",
  "gui.musictriggers.button.title_view.hover": "Click to cycle between title and image cards",
  "gui.musictriggers.button.add_trigger": "Add Trigger",
  "gui.musictriggers.button.add_trigger.hover": "Add a new trigger or trigger instance to the registry.",
  "gui.musictriggers.button.add_song": "Add Song",
  "gui.musictriggers.button.add_song.hover": "Add a new song or song instance to the registry.",
  "gui.musictriggers.button.confirm_triggers": "Confirm Trigger Selection",
  "gui.musictriggers.button.confirm_triggers.hover": "All of triggers selected here will be added to the previously selected triggers parameter",
  "gui.musictriggers.parameter.debug.show_debug.name": "Show Debug Info",
  "gui.musictriggers.parameter.debug.show_debug.desc": "Allows some useful information to be displayed for debug purposes.",
  "gui.musictriggers.parameter.debug.current_song_only.name": "Current Song Only",
  "gui.musictriggers.parameter.debug.current_song_only.desc": "If the debug info is turned on it will only display the name of the song currently playing.",
  "gui.musictriggers.parameter.debug.allow_timestamps.name": "Allow Timestamps",
  "gui.musictriggers.parameter.debug.allow_timestamps.desc": "If Show Debug Info and Current Song Only are both enabled, this will also let the timestamps display as well",
  "gui.musictriggers.parameter.debug.encoding_quality.name": "Encoding Quality",
  "gui.musictriggers.parameter.debug.encoding_quality.desc": "Turning this down will potentially fix audio stuters when the CPU is under high load. Accepts integer values between 1 and 10.",
  "gui.musictriggers.parameter.debug.resampling_quality.name": "Resampling Quality",
  "gui.musictriggers.parameter.debug.resampling_quality.desc": "Turning this down will potentially fix audio stuters when the CPU is under high load. Accepts HIGH, MEDIUM, and LOW.",
  "gui.musictriggers.parameter.debug.log_level.name": "Log Level",
  "gui.musictriggers.parameter.debug.log_level.desc": "Sets the lowest log level to appear within the log visualization GUI. The accepted levels in order are DEBUG, INFO, WARN, ERROR, and FATAL.",
  "gui.musictriggers.parameter.debug.max_hover_elements.name": "Max Hover Elements",
  "gui.musictriggers.parameter.debug.max_hover_elements.desc": "The maximum number of elements in a list that will be displayed for mouse hover information in the GUI",
  "gui.musictriggers.parameter.debug.play_normal_music.name": "Play Normal Music",
  "gui.musictriggers.parameter.debug.play_normal_music.desc": "Allows vanilla and blocked music to play when there is not music from Music Triggers already playing or if overrides for the channel that is playing music are turned off.",
  "gui.musictriggers.parameter.debug.reverse_priority.name": "Reverse Priority Check",
  "gui.musictriggers.parameter.debug.reverse_priority.desc": "Reverses the priority checker in the case of multiple triggers being able to play at once so the lowest priority wins instead of the highest.",
  "gui.musictriggers.parameter.debug.combine_pools.name": "Combine Equal Priority",
  "gui.musictriggers.parameter.debug.combine_pools.desc": "Allows for the combination of song pools in the case of multiple triggers with the same priority value being able to play at once. Note that parameters such as fade, delay, and persistence will still be taken from the first trigger in the load order.",
  "gui.musictriggers.parameter.debug.pause_when_tabbed.name": "Pause When Tabbed",
  "gui.musictriggers.parameter.debug.pause_when_tabbed.desc": "Determines if get music gets paused when the game is not in focus",
  "gui.musictriggers.parameter.debug.blocked_mod_categories.name": "Blocked Mod Categories",
  "gui.musictriggers.parameter.debug.blocked_mod_categories.desc": "Blocks music playing in a specified audio category for the listed mod ids. Each entry must be formatted like \"modid;category\". If the category is not present or does not exist, \"music\" will be assumed. Audio will be blocked by default unless otherwise specified within the channel info.",
  "gui.musictriggers.parameter.debug.block_streaming_only.name": "Block Streaming Only",
  "gui.musictriggers.parameter.debug.block_streaming_only.desc": "Determines whether non streaming audio sources like sound effects are able to get blocked.",
  "gui.musictriggers.parameter.debug.interrupted_audio_categories.name": "Interrupted Audio Categories",
  "gui.musictriggers.parameter.debug.interrupted_audio_categories.desc": "When Music Triggers starts playing audio from a channel, the audio categories listed here will be stopped/paused depending on the settings of that channel.",
  "gui.musictriggers.parameter.registration.register_discs.name": "Register Discs",
  "gui.musictriggers.parameter.registration.register_discs.desc": "This dictates whether or not the the Blank Music Disc, Enhanced Music Disc, and Music Recorder get registered.",
  "gui.musictriggers.parameter.registration.client_side_only.name": "Client Side Only",
  "gui.musictriggers.parameter.registration.client_side_only.desc": "If this is true, the server side is not required to have the mod file. No items, blocks, or packets will be registered if it is true, which will break some triggers that require information from the server to function correctly",
  "gui.musictriggers.parameter.channel_info.sound_category.name": "Sound Category",
  "gui.musictriggers.parameter.channel_info.sound_category.desc": "The vanilla sound category that the channel is tied to. The accepted vanilla categories are master, music, record, weather, block, hostile, neutral, player, ambient, and voice. If another mod adds new sound categories, you can use those as well, but setting this to a category that does not exist will not create a new one.",
  "gui.musictriggers.parameter.channel_info.main_path.name": "Main Config Path",
  "gui.musictriggers.parameter.channel_info.main_path.desc": "The file path for the main config file. You can specify files nested in folders like folder/folder/file etc. The only limit for nesting files is what your operating system allows for.",
  "gui.musictriggers.parameter.channel_info.transitions_path.name": "Transitions Config Path",
  "gui.musictriggers.parameter.channel_info.transitions_path.desc": "The file path for the transitions config file. You can specify files nested in folders like folder/folder/file etc. The only limit for nesting files is what your operating system allows for.",
  "gui.musictriggers.parameter.channel_info.commands_path.name": "Commands Config Path",
  "gui.musictriggers.parameter.channel_info.commands_path.desc": "The file path for the commands config file. You can specify files nested in folders like folder/folder/file etc. The only limit for nesting files is what your operating system allows for.",
  "gui.musictriggers.parameter.channel_info.toggles_path.name": "Toggles Config Path",
  "gui.musictriggers.parameter.channel_info.toggles_path.desc": "The file path for the toggles config file. You can specify files nested in folders like folder/folder/file etc. The only limit for nesting files is what your operating system allows for.",
  "gui.musictriggers.parameter.channel_info.redirect_path.name": "Redirect Path",
  "gui.musictriggers.parameter.channel_info.redirect_path.desc": "The file path for the redirect file. You can specify files nested in folders like folder/folder/file etc. The only limit for nesting files is what your operating system allows for.",
  "gui.musictriggers.parameter.channel_info.jukebox_path.name": "Jukebox Path",
  "gui.musictriggers.parameter.channel_info.jukebox_path.desc": "The file path for the jukebox file. You can specify files nested in folders like folder/folder/file etc. The only limit for nesting files is what your operating system allows for.",
  "gui.musictriggers.parameter.channel_info.audio_folder.name": "Audio Path",
  "gui.musictriggers.parameter.channel_info.audio_folder.desc": "The folder path that this channel will read audio files in from. You can specify nested folders like folder/folder/folder etc. The only limit for nesting folders is what your operating system allows for.",
  "gui.musictriggers.parameter.channel_info.paused_by_jukebox.name": "Paused by Jukeboxes",
  "gui.musictriggers.parameter.channel_info.paused_by_jukebox.desc": "Determines whether or not the audio for the channel will be paused when a jukebox is active within audible range.",
  "gui.musictriggers.parameter.channel_info.overrides_normal_music.name": "Overrides Normal Music",
  "gui.musictriggers.parameter.channel_info.overrides_normal_music.desc": "Determines whether or not blocked audio will be able to start playing to the vanilla sound system when audio is playing from this channel.",
  "gui.musictriggers.parameter.channel_info.pause_overrides.name": "Pause Audio Overrides",
  "gui.musictriggers.parameter.channel_info.pause_overrides.desc": "When audio from this channel starts playing, this determines whether audio playing to the vanilla sound system gets paused or stopped.",
  "gui.musictriggers.parameter.channel_info.explicit_overrides.name": "Explicit Overrides",
  "gui.musictriggers.parameter.channel_info.explicit_overrides.desc": "If this is enabled, only audio playing to the category this channel is attached to in the vanilla sound system will be affected when an override is applied. Otherwise, the Interrupted Audio Categories debug option will be used instead.",
  "gui.musictriggers.parameter.command.triggers.name": "Triggers",
  "gui.musictriggers.parameter.command.triggers.desc": "All triggers listed here must be active for the command to be able to run",
  "gui.musictriggers.parameter.command.literal.name": "Command Literal",
  "gui.musictriggers.parameter.command.literal.desc": "The literal string of the command as if you were to type it into a server console.",
  "gui.musictriggers.parameter.link.channel.name":"Channel",
  "gui.musictriggers.parameter.link.channel.desc": "The channel this link will apply towards. The channel is allowed to be the same as the one this is registered under, it will just be unable to crossfade.",
  "gui.musictriggers.parameter.link.inherit_time.name": "Inherit Time",
  "gui.musictriggers.parameter.link.inherit_time.desc": "Determines whether the song that plays after the link activates will start at the beginning or inherit the time from the song that was playing before the link activated",
  "gui.musictriggers.parameter.link.resume_after_link.name": "Resume After Link",
  "gui.musictriggers.parameter.link.resume_after_link.desc": "When this is active, the song that was playing before the link activated will either continue where it left off once the link is no longer active or continue where the linked song stopped at depening on if inherit time is enabled. Inherit time must be enabled to pull the time from the song playing in the linked channel.",
  "gui.musictriggers.parameter.link.required_triggers.name": "Required Triggers",
  "gui.musictriggers.parameter.link.required_triggers.desc": "These are the triggers that must be active in addition to the one this link is registered under. In the case of no elements, the link will only be active when only the trigger it is registered under is active. To ignore other triggers and have the link activate any time this trigger is active make only a single element and have it be the trigger.",
  "gui.musictriggers.parameter.link.linked_triggers.name": "Linked Triggers",
  "gui.musictriggers.parameter.link.linked_triggers.desc": "These are the triggers that must be active in the linked channel for this link to activate.",
  "gui.musictriggers.parameter.loop_info.from.name": "From",
  "gui.musictriggers.parameter.loop_info.from.desc": "The starting point of the loop. When the audio reaches this time it will trigger and the 'To' time will be set. Accepts any positive integer and is read in as milliseconds. Requires the song to be seekable",
  "gui.musictriggers.parameter.loop_info.to.name": "To",
  "gui.musictriggers.parameter.loop_info.to.desc": "The time the audio will get set to when the 'From' is reached. This can be an earlier or later timestamp depending on your use case. Accepts any positive integer and is read in as milliseconds. Requires the song to be seekable",
  "gui.musictriggers.parameter.loop_info.num_loops.name": "Number of Loops",
  "gui.musictriggers.parameter.loop_info.num_loops.desc": "The number of times this loop is able to be triggered. Set to 1 if your 'To' is set later than your 'From'. Accepts any positive integer",
  "gui.musictriggers.parameter.song_info.loops.name": "Loops",
  "gui.musictriggers.parameter.song_info.volume.name": "Volume",
  "gui.musictriggers.parameter.song_info.volume.desc": "Sets the volume of the song relative to the volume of the sound category the channel is attached to. Accepts values from 0-1;",
  "gui.musictriggers.parameter.song_info.pitch.name": "Pitch",
  "gui.musictriggers.parameter.song_info.pitch.desc": "Sets the pitch of the song. Accepts values from 0.5-1.5;",
  "gui.musictriggers.parameter.song_info.chance.name": "Weighted Chance",
  "gui.musictriggers.parameter.song_info.chance.desc": "If more than 2 songs are assigned to a song pool for a group of triggers, this is the number over the totaled chance values of all the songs in the pool for this song to play. The same song will never play twice in a row regardless of the chance value set. Accepts any integer value greater than 0",
  "gui.musictriggers.parameter.song_info.play_once.name": "Play Once",
  "gui.musictriggers.parameter.song_info.play_once.desc": "Sets various different levels of having the song only play once. Set to 1 for the song to play once until all the songs in the pool are played before it can play again. Set to 2 for the song to only be able to play once before the trigger gets changed. Set to 3 for the song to only be able to get played once per login. Set to 4 for the song to only be able to get played once per world. Set to 5 for the song to only get played once per session. Refreshing the config from this GUI will reset all play once values.",
  "gui.musictriggers.parameter.song_info.play_x.name": "Play X Times",
  "gui.musictriggers.parameter.song_info.play_x.desc": "Determines the number of times the song must be played in order for the play_once parameter to take effect",
  "gui.musictriggers.parameter.song_info.must_finish.name": "Must Finish",
  "gui.musictriggers.parameter.song_info.must_finish.desc": "If this is active, the song will continue to play until it is finished regardless of trigger changes",
  "gui.musictriggers.parameter.song_info.resume_on_play.name": "Resume On Play",
  "gui.musictriggers.parameter.song_info.resume_on_play.desc": "If the song has already played an begins the play again, it will resume playing at the position in the track where it left off. Requires the song to be seekable",
  "gui.musictriggers.parameter.song_info.start_at.name": "Start At",
  "gui.musictriggers.parameter.song_info.start_at.desc": "Determines the millisecond position the song will be played from when it starts. Requires the song to be seekable",
  "gui.musictriggers.parameter.song_info.triggers.name": "Triggers",
  "gui.musictriggers.parameter.song_info.triggers.desc": "All of the triggers listed under this parameter must be active for the song to be able to play",
  "gui.musictriggers.parameter.image.triggers.name": "Triggers",
  "gui.musictriggers.parameter.image.triggers.desc": "All triggers listed here must be active for the image to be shown",
  "gui.musictriggers.parameter.image.time.name": "Time",
  "gui.musictriggers.parameter.image.time.desc": "Determines the number of ticks the image will be rendered for",
  "gui.musictriggers.parameter.image.fade_in.name": "Fade In",
  "gui.musictriggers.parameter.image.fade_in.desc": "Determines the number of ticks it takes the image to fade in from 0 to the set opacity value",
  "gui.musictriggers.parameter.image.fade_out.name": "Fade Out",
  "gui.musictriggers.parameter.image.fade_out.desc": "Determines the number of ticks it takes the image to fade from the set opacity value to 0 at the end of the set time",
  "gui.musictriggers.parameter.image.opacity.name": "Opacity",
  "gui.musictriggers.parameter.image.opacity.desc": "The default opacity or alpha value of the image. Accepts decimal value between 0-1;",
  "gui.musictriggers.parameter.image.scale_x.name": "Scale X",
  "gui.musictriggers.parameter.image.scale_x.desc": "Determines the horizontal scaling of the image",
  "gui.musictriggers.parameter.image.scale_y.name": "Scale Y",
  "gui.musictriggers.parameter.image.scale_y.desc": "Determines the vertical scaling of the image",
  "gui.musictriggers.parameter.image.horizontal_alignment.name": "Horizontal Alignment",
  "gui.musictriggers.parameter.image.horizontal_alignment.desc": "Determines the default horizontal position of the image on the screen. The accepted values are 'left', 'center', and 'right'.",
  "gui.musictriggers.parameter.image.vertical_alignment.name": "Vertical Alignment",
  "gui.musictriggers.parameter.image.vertical_alignment.desc": "Determines the default vertical position of the image on the screen. The accepted values are 'top', 'center', and 'bottom'.",
  "gui.musictriggers.parameter.image.x.name": "X Position",
  "gui.musictriggers.parameter.image.x.desc": "Determines the horizontal position of the image on the screen. Note that this is in relation to the horizontal alignment. Positive values shift it to the right and negative values shift it to the left.",
  "gui.musictriggers.parameter.image.y.name": "Y Position",
  "gui.musictriggers.parameter.image.y.desc": "Determines the vertical position of the image on the screen. Note that this is in relation to the vertical alignment. Positive values shift it downwards and negative values shift it upwards.",
  "gui.musictriggers.parameter.image.play_once.name": "Play Once",
  "gui.musictriggers.parameter.image.play_once.desc": "Determines whether the image card will be able to show once or multiple times",
  "gui.musictriggers.parameter.image.vague.name": "Vague",
  "gui.musictriggers.parameter.image.vague.desc": "Enables the image card to be show when the required triggers are all playable but not necessarily active.",
  "gui.musictriggers.parameter.image.animated.name": "Animated",
  "gui.musictriggers.parameter.image.animated.desc": "Enables the image to be animated. Note that this requires a vertical sprite sheet with 1 column of frames as a png file. This is the same process as the vanilla png.mcmeta animations, but there is no need to include the mcmeta file with the image here as it will not be read in. Only accepts square textures as the width of the sprite sheet is used to determine the height and number of frames.",
  "gui.musictriggers.parameter.image.fps.name": "FPS",
  "gui.musictriggers.parameter.image.fps.desc": "If the image is set to be animated, this determines the FPS of the animation. For example, the default value of 20 means that it will render 20 frames per second. Theoretically supports up to the current FPS your game is running at.",
  "gui.musictriggers.parameter.title.triggers.name": "Triggers",
  "gui.musictriggers.parameter.title.triggers.desc": "All triggers listed here must be active for the title to be shown",
  "gui.musictriggers.parameter.title.titles.name": "Titles",
  "gui.musictriggers.parameter.title.titles.desc": "If more than 1 title is listed here, a random one will be chosen.",
  "gui.musictriggers.parameter.title.subtitles.name": "Subtitles",
  "gui.musictriggers.parameter.title.subtitles.desc": "If more than 1 subtitle is listed here, a random one will be chosen.",
  "gui.musictriggers.parameter.title.title_color.name": "Title Color",
  "gui.musictriggers.parameter.title.title_color.desc": "The display color of the title",
  "gui.musictriggers.parameter.title.subtitle_color.name": "Subtitle Color",
  "gui.musictriggers.parameter.title.subtitle_color.desc": "The display color of the subtitle",
  "gui.musictriggers.parameter.title.play_once.name": "Play Once",
  "gui.musictriggers.parameter.title.play_once.desc": "Determines whether the title card will be able to show once or multiple times",
  "gui.musictriggers.parameter.title.vague.name": "Vague",
  "gui.musictriggers.parameter.title.vague.desc": "Enables the title card to be show when the required triggers are all playable but not necessarily active.",
  "gui.musictriggers.parameter.title.centered.name": "Is Text Centered",
  "gui.musictriggers.parameter.title.centered.desc": "Determines whether the text of the titles and subtitles are centered or left-aligned",
  "gui.musictriggers.parameter.title.horizontal_alignment.name": "Horizontal Alignment",
  "gui.musictriggers.parameter.title.horizontal_alignment.desc": "Determines the default horizontal position of the text on the screen. The accepted values are 'left', 'center', and 'right'.",
  "gui.musictriggers.parameter.title.vertical_alignment.name": "Vertical Alignment",
  "gui.musictriggers.parameter.title.vertical_alignment.desc": "Determines the default vertical position of the text on the screen. The accepted values are 'top', 'center', and 'bottom'.",
  "gui.musictriggers.parameter.title.x.name": "X Position",
  "gui.musictriggers.parameter.title.x.desc": "Determines the horizontal position of the text on the screen. Note that this is the center position if centered is enabled and the left position if it is not and that the position is relative to the set horizontal alignment. Positive values shift it to the right and negative values shift it to the left.",
  "gui.musictriggers.parameter.title.y.name": "Y Position",
  "gui.musictriggers.parameter.title.y.desc": "Determines the vertical position of the text on the screen. Note that this is in relation to the vertical alignment. Positive values shift it downwards and negative values shift it upwards.",
  "gui.musictriggers.parameter.title.scale_x.name": "Scale X",
  "gui.musictriggers.parameter.title.scale_x.desc": "Determines the horizontal scaling of the text",
  "gui.musictriggers.parameter.title.scale_y.name": "Scale Y",
  "gui.musictriggers.parameter.title.scale_y.desc": "Determines the vertical scaling of the text",
  "gui.musictriggers.parameter.title.subtitle_scale.name": "Subtitle Scale",
  "gui.musictriggers.parameter.title.subtitle_scale.desc": "Determines the scaling of the subtitles in relation to the titles",
  "gui.musictriggers.parameter.title.time.name": "Time",
  "gui.musictriggers.parameter.title.time.desc": "Determines the number of ticks the title will be rendered for",
  "gui.musictriggers.parameter.title.fade_in.name": "Fade In",
  "gui.musictriggers.parameter.title.fade_in.desc": "Determines the number of ticks it takes the title to fade in from 0 to the set opacity value",
  "gui.musictriggers.parameter.title.fade_out.name": "Fade Out",
  "gui.musictriggers.parameter.title.fade_out.desc": "Determines the number of ticks it takes the title to fade from the set opacity value to 0 at the end of the set time",
  "gui.musictriggers.parameter.title.opacity.name": "Opacity",
  "gui.musictriggers.parameter.title.opacity.desc": "The default opacity or alpha value of the title. Accepts decimal value between 0-1",
  "gui.musictriggers.parameter.toggle.channel.name": "Channel",
  "gui.musictriggers.parameter.toggle.channel.desc": "The channel reference for interacting with triggers registered to other channels",
  "gui.musictriggers.parameter.toggle.trigger_play_once.name": "Play Once",
  "gui.musictriggers.parameter.toggle.trigger_play_once.desc": "Determines whether the toggle will only be able to play once or multiple times",
  "gui.musictriggers.parameter.toggle.trigger_triggers.name": "Triggers",
  "gui.musictriggers.parameter.toggle.trigger_triggers.desc": "All of the triggers listed under this parameter must be active for the toggle to activate",
  "gui.musictriggers.parameter.toggle.channel_activation.name": "Channel Activation",
  "gui.musictriggers.parameter.toggle.channel_activation.desc": "If this is enabled, the triggers under this \"to\" table will be ignored and the condition will be applied to the entire channel referenced from the channel parameter. Be careful about using a channel to toggle itself off!",
  "gui.musictriggers.parameter.toggle.target_triggers.name": "Triggers",
  "gui.musictriggers.parameter.toggle.target_triggers.desc": "All of the triggers listed under this parameter will be affected by the toggle",
  "gui.musictriggers.parameter.trigger_info.links.name": "Links",
  "gui.musictriggers.parameter.trigger_info.priority.name": "Priority",
  "gui.musictriggers.parameter.trigger_info.priority.desc": "This dictates which trigger is able to play in the case of multiple triggers being active at once. Highest priority wins, unless you have it reversed in the debug options. In the case of multiple triggers of the same priority being able to play at once it will choose the one that got registered first unless you enable the debug option that allows song pools to combine in that case. Accepts any integer. Default priority for all triggers is 0.",
  "gui.musictriggers.parameter.trigger_info.identifier.name": "Identifier",
  "gui.musictriggers.parameter.trigger_info.identifier.desc": "This is required to be set for all triggers that accept it as a parameter. Using the same identifier within the same trigger for 2 different songs allows you to add them to the same pool, while using different identifiers creates 2 different parameter sets for the trigger. Identifiers are not checked across triggers, so whether or not 2 triggers have the same or different identifiers does not matter. Only the first instance of a trigger or identifier within a trigger can set the parameters. This is determined by which comes first in the load order or equivalently which comes first within the actual file. Accepts any string value.",
  "gui.musictriggers.parameter.trigger_info.fade_in.name": "Fade In",
  "gui.musictriggers.parameter.trigger_info.fade_in.desc": "How many ticks it will take the trigger to fade into the set volume for whatever song gets played. This is only run when the trigger activates and not in between songs of the same trigger or trigger combination. Accepts any integer greater or equal to 0.",
  "gui.musictriggers.parameter.trigger_info.fade_out.name": "Fade Out",
  "gui.musictriggers.parameter.trigger_info.fade_out.desc": "How many ticks it will take whatever song the trigger is playing to fade out after it is no longer active. Accepts any integer greater or equal to 0.",
  "gui.musictriggers.parameter.trigger_info.trigger_delay.name": "Trigger Delay",
  "gui.musictriggers.parameter.trigger_info.trigger_delay.desc": "The number of ticks after a trigger is active before any songs are able to start playing. Accepts any integer greater or equal to 0.",
  "gui.musictriggers.parameter.trigger_info.song_delay.name": "Song Delay",
  "gui.musictriggers.parameter.trigger_info.song_delay.desc": "The number of ticks within a trigger after a song ends before the next one is able to start playing. Accepts any integer greater or equal to 0.",
  "gui.musictriggers.parameter.trigger_info.level.difficulty.name": "Difficulty Level",
  "gui.musictriggers.parameter.trigger_info.level.difficulty.desc": "This is the level of difficulty the world must be in for the trigger to be active. 0 is peaceful, 1 is easy, 2 is normal, 3 is hard, and 4 is hardcore.",
  "gui.musictriggers.parameter.trigger_info.level.light.name": "Light Level",
  "gui.musictriggers.parameter.trigger_info.level.light.desc": "The light level at the position of the player must be less than or equal to this value for the trigger to be active. Accepts any integer value from 0-15.",
  "gui.musictriggers.parameter.trigger_info.level.height.name": "Y Level",
  "gui.musictriggers.parameter.trigger_info.level.height.desc": "The required Y level the player must be under. Accepts any integer value.",
  "gui.musictriggers.parameter.trigger_info.level.lowhp.name": "Health Percentage",
  "gui.musictriggers.parameter.trigger_info.level.lowhp.desc": "The non-inclusive percentage of health that is considered to be low for the player. Accepts any integer value from 0-100.",
  "gui.musictriggers.parameter.trigger_info.level.drowning.name": "Air Level",
  "gui.musictriggers.parameter.trigger_info.level.drowning.desc": "The non-inclusive air level where the player is considered to be drowning. Accepts any integer value from 1-300.",
  "gui.musictriggers.parameter.trigger_info.level.mob.name": "Number of Mobs",
  "gui.musictriggers.parameter.trigger_info.level.mob.desc": "There has to be at least this number of mobs within the specified range that fit the set parameters. Accepts any integer value greater than 0.",
  "gui.musictriggers.parameter.trigger_info.level.statistic.name": "Stat Level",
  "gui.musictriggers.parameter.trigger_info.level.statistic.desc": "The value of the checked stat must be higher than this. Accepts any integer value greater than 0.",
  "gui.musictriggers.parameter.trigger_info.level.raid.name": "Wave",
  "gui.musictriggers.parameter.trigger_info.level.raid.desc": "The wave number of the raid must be at least this. Accepts any integer value greater than 0.",
  "gui.musictriggers.parameter.trigger_info.level.rainintensity.name": "Rain Intensity Level",
  "gui.musictriggers.parameter.trigger_info.level.rainintensity.desc": "The intensity of the rain must be greater than this. Accepts any integer value from 0-100",
  "gui.musictriggers.parameter.trigger_info.level.season.name": "Season",
  "gui.musictriggers.parameter.trigger_info.level.season.desc": "The current season that must be active in the world. 0 is Spring, 1 is Summer, 2 is Autumn, and 3 is Winter.",
  "gui.musictriggers.parameter.trigger_info.level.tornado.name": "Intensity",
  "gui.musictriggers.parameter.trigger_info.level.tornado.desc": "The intensity that the tornado must be greater than or equal to. Accepts any integer value from 1-5.",
  "gui.musictriggers.parameter.trigger_info.persistence.name": "Persistence",
  "gui.musictriggers.parameter.trigger_info.persistence.desc": "The number of ticks the trigger will stay active for after its parameters are no longer met.",
  "gui.musictriggers.parameter.trigger_info.start_delay.name": "Start Delay",
  "gui.musictriggers.parameter.trigger_info.start_delay.desc": "The number of ticks before the trigger gets activated after its parameters are met.",
  "gui.musictriggers.parameter.trigger_info.stop_delay.name": "Stop Delay",
  "gui.musictriggers.parameter.trigger_info.stop_delay.desc": "The number of ticks a trigger will be unable to activate for after it finishes being active. Accepts any integer greater or equal to 0.",
  "gui.musictriggers.parameter.trigger_info.time_bundle.name": "Time Bundle",
  "gui.musictriggers.parameter.trigger_info.time_bundle.desc": "This is used to set a predetermined bundle for the time trigger. Note that if this is set the Start Hour and End Hour parameters will not be used. The bundles are day which runs from hours 0-13, night which runs from hours 13-24, sunset which runs from hours 12-13, and sunrise which runs from hours 23-24.",
  "gui.musictriggers.parameter.trigger_info.start_hour.name": "Start Hour",
  "gui.musictriggers.parameter.trigger_info.start_hour.desc": "The hour of the in-game day in which the trigger will start to be active. Accepts any decimal value between and including 0-24.",
  "gui.musictriggers.parameter.trigger_info.end_hour.name": "End Hour",
  "gui.musictriggers.parameter.trigger_info.end_hour.desc": "The hour of the in-game day in which the trigger will no longer be active. Accepts any decimal value between and including 0-24.",
  "gui.musictriggers.parameter.trigger_info.lowest_day_number.name": "Lowest Day Number",
  "gui.musictriggers.parameter.trigger_info.lowest_day_number.desc": "The first in-day where the trigger can activate. Accepts any positive integer value.",
  "gui.musictriggers.parameter.trigger_info.highest_day_number.name": "Highest Day Number",
  "gui.musictriggers.parameter.trigger_info.highest_day_number.desc": "The last in-day where the trigger can be active. Accepts any positive integer value.",
  "gui.musictriggers.parameter.trigger_info.zone_min_x.name": "Minimum X Coordinate",
  "gui.musictriggers.parameter.trigger_info.zone_min_x.desc": "The minimum X value for the bounding box of the zone. Accepts any integer value less than the maximum X value.",
  "gui.musictriggers.parameter.trigger_info.zone_max_x.name": "Maximum X Coordinate",
  "gui.musictriggers.parameter.trigger_info.zone_max_x.desc": "The maximum X value for the bounding box of the zone. Accepts any integer value greater than the minimum X value.",
  "gui.musictriggers.parameter.trigger_info.zone_min_y.name": "Minimum Y Coordinate",
  "gui.musictriggers.parameter.trigger_info.zone_min_y.desc": "The minimum Y value for the bounding box of the zone. Accepts any integer value less than the maximum Y value.",
  "gui.musictriggers.parameter.trigger_info.zone_max_y.name": "Maximum Y Coordinate",
  "gui.musictriggers.parameter.trigger_info.zone_max_y.desc": "The maximum Y value for the bounding box of the zone. Accepts any integer value greater than the minimum Y value.",
  "gui.musictriggers.parameter.trigger_info.zone_min_z.name": "Minimum Z Coordinate",
  "gui.musictriggers.parameter.trigger_info.zone_min_z.desc": "The minimum Z value for the bounding box of the zone. Accepts any integer value less than the maximum Z value.",
  "gui.musictriggers.parameter.trigger_info.zone_max_z.name": "Maximum Z Coordinate",
  "gui.musictriggers.parameter.trigger_info.zone_max_z.desc": "The maximum Z value for the bounding box of the zone. Accepts any integer value greater than the minimum Z value.",
  "gui.musictriggers.parameter.trigger_info.resource_name.riding.name": "Mob Name",
  "gui.musictriggers.parameter.trigger_info.resource_name.riding.desc": "The name or ID of the mob that must be ridden for the trigger to be active. If you would like to use the mob name, it must match the display name exactly as seen on the spawn egg or debug info. Alternatively, if you would like to use the ID of the mob, you are allowed to partially match it in order to catch multiple entities. Accepts a list of strings that must contain at least 1 non-empty entry.",
  "gui.musictriggers.parameter.trigger_info.resource_name.dimension.name": "Dimension ID",
  "gui.musictriggers.parameter.trigger_info.resource_name.dimension.desc": "The name of the dimension, which is allowed to partially match the input here. Accepts a list of strings that must contain at least 1 non-empty entry",
  "gui.musictriggers.parameter.trigger_info.resource_name.biome.name": "Biome ID",
  "gui.musictriggers.parameter.trigger_info.resource_name.biome.desc": "The registered ID of the biome. This can partially match in order to catch multiple biomes with the same string of characters. Accepts a list of strings that must contain at least 1 non-empty entry",
  "gui.musictriggers.parameter.trigger_info.resource_name.structure.name": "Structure ID",
  "gui.musictriggers.parameter.trigger_info.resource_name.structure.desc": "The registered ID of the structure. This can partially match in order to catch multiple structures with the same string of characters. Accepts a list of strings that must contain at least 1 non-empty entry",
  "gui.musictriggers.parameter.trigger_info.resource_name.mob.name": "Mob Name",
  "gui.musictriggers.parameter.trigger_info.resource_name.mob.desc": "The name or ID of the mob that must be matched. If you would like to use the mob name, it must match the display name exactly as seen on the spawn egg or debug info. Alternatively, if you would like to use the ID of the mob, you are allowed to partially match it in order to catch multiple entities. In the case of multiple entries, any of the entries can match. If one of the entries contains 'MOB', it will be active for any hostile mob, with the rest of the entries acting as a blacklist. Alternatively, if one of the entries contains 'BOSS', it will be active whenever there is a boss bar on the screen, with the rest of the entries acting as a whitelist for specific boss bar names. Note that in the case of BOSS, it does not take the actual entity into account, meaning the number, health, and horde health parameters are the only other applicable ones.",
  "gui.musictriggers.parameter.trigger_info.resource_name.gui.name": "GUI Name",
  "gui.musictriggers.parameter.trigger_info.resource_name.gui.desc": "The name of the class for the current GUI. This can partially match in order to catch multiple GUI screens. Accepts a list of strings that must contain at least 1 non-empty entry. If 1 entry is 'CREDITS', it will play during the credits after the Ender Dragon has been defeated",
  "gui.musictriggers.parameter.trigger_info.resource_name.effect.name": "Effect ID",
  "gui.musictriggers.parameter.trigger_info.resource_name.effect.desc": "The ID of the potion effect that the player must have. This can partially match in order to catch multiple effects. Accepts a list of strings that must contain at least 1 non-empty entry.",
  "gui.musictriggers.parameter.trigger_info.resource_name.statistic.name": "Stat Name",
  "gui.musictriggers.parameter.trigger_info.resource_name.statistic.desc": "The ID of the statistic that the player must have. This can partially match in order to catch multiple stats. Accepts a list of strings that must contain at least 1 non-empty entry.",
  "gui.musictriggers.parameter.trigger_info.resource_name.gamestage.name": "Gamestage Name",
  "gui.musictriggers.parameter.trigger_info.resource_name.gamestage.desc": "The name of the gamestage that the player must have or not have depending on your whitelist. Accepts a list of strings that must contain at least 1 non-empty entry.",
  "gui.musictriggers.parameter.trigger_info.resource_name.moon.name": "Moon Name",
  "gui.musictriggers.parameter.trigger_info.resource_name.moon.desc": "The name of the custom moon that must be active. Accepts a list of strings that must contain at least 1 non-empty entry.",
  "gui.musictriggers.parameter.trigger_info.resource_name.blockentity.name": "BlockEntity ID",
  "gui.musictriggers.parameter.trigger_info.resource_name.blockentity.desc": "The ID of the BlockEntity to check for. Accepts a list of strings that must contain at least 1 non-empty entry.",
  "gui.musictriggers.parameter.trigger_info.start_toggled.name": "Start Toggled",
  "gui.musictriggers.parameter.trigger_info.start_toggled.desc": "Determines whether or not the trigger will start in an active toggled state. Accepts true or false.",
  "gui.musictriggers.parameter.trigger_info.not.name": "Invert Activation",
  "gui.musictriggers.parameter.trigger_info.not.desc": "The trigger will deactivate when all the parameters are met and will otherwise be active. Accepts true or false.",
  "gui.musictriggers.parameter.trigger_info.passive_persistence.name": "Passive Persistence",
  "gui.musictriggers.parameter.trigger_info.passive_persistence.desc": "Determines whether or not the persistence parameter is enforced when the trigger is playable but another higher priority trigger is active instead. Accepts true or false.",
  "gui.musictriggers.parameter.trigger_info.toggle_inactive_playable.name": "Toggle Inactive Playable",
  "gui.musictriggers.parameter.trigger_info.toggle_inactive_playable.desc": "If this is active, the trigger will get toggled off when the trigger is playable and another higher priority trigger is active instead. Accepts true or false.",
  "gui.musictriggers.parameter.trigger_info.detection_range.name": "Detection Range",
  "gui.musictriggers.parameter.trigger_info.detection_range.home.desc": "The maximum distance in blocks that the player is allowed to be from the respawn position for the trigger to be active. Accepts any positive integer value and the default is 16.",
  "gui.musictriggers.parameter.trigger_info.detection_range.mob.desc": "The range in blocks from the player that will be checked for mobs. Accepts any positive integer value and the default is 16.",
  "gui.musictriggers.parameter.trigger_info.detection_range.tornado.desc": "The maximum distance in blocks that the player is allowed to be from the tornado. Accepts any positive integer value.",
  "gui.musictriggers.parameter.trigger_info.detection_range.hurricane.desc": "The maximum distance in blocks that the player is allowed to be from the hurricane. Accepts any positive integer value.",
  "gui.musictriggers.parameter.trigger_info.detection_range.sandstorm.desc": "The maximum distance in blocks that the player is allowed to be from the sandstorm. Accepts any positive integer value.",
  "gui.musictriggers.parameter.trigger_info.mob_targeting.name": "Mob Targeting",
  "gui.musictriggers.parameter.trigger_info.mob_targeting.desc": "Determines whether or not a mob must be targeting the player. Accepts true or false.",
  "gui.musictriggers.parameter.trigger_info.health.name": "Health",
  "gui.musictriggers.parameter.trigger_info.health.desc": "The percentage of health a mob must be at or less than. Accepts any integer value from 0-100.",
  "gui.musictriggers.parameter.trigger_info.horde_targeting_percentage.name": "Horde Targeting Percentage",
  "gui.musictriggers.parameter.trigger_info.horde_targeting_percentage.desc": "This is percentage of mobs in regards to the Mob Number parameter which must be targeting the player. Accepts any integer value from 0-100.",
  "gui.musictriggers.parameter.trigger_info.horde_health_percentage.name": "Horde Health Percentage",
  "gui.musictriggers.parameter.trigger_info.horde_health_percentage.desc": "This is percentage of mobs in regards to the Mob Number parameter which must activate the Health parameter. Accepts any integer value from 0-100.",
  "gui.musictriggers.parameter.trigger_info.mob_nbt.name": "Mob NBT Data",
  "gui.musictriggers.parameter.trigger_info.mob_nbt.desc": "This is a rather complex parameter that can deal with multiple different types of NBT data. If you are unfamiliar with how NBT data works, I would avoid using this parameter entirely. With that in mind, there 6 different prefixes to keep note of. These are KEY_PRESENT, VAL_PRESENT, GREATER, LESSER, EQUAL, and INVERT. KEY_PRESENT will check if a tag with a specific key is present and it is a compound tag. VAL_PRESENT will check if a value-based data parameter is present which is not a compound tag. GREATER will check if the referenced numerical NBT value is greater than the given value. LESSER will check if the referenced numerical NBT value is less than the given value. EQUAL is a catch-all parameter that can check if a numerical NBT value is equal to a given one, if a boolean NBT value is equivalent to the given input, or if a string NBT value matches the given input. It can also be used after a GREATER or LESSER check to allow the operation to check for matching values as well. INVERT will check if a boolean NBT value is the opposite of the given value. It can also be used after the KEY_PRESENT, VAL_PRESENT, or EQUAL checks to invert them. This parameter parses NBT data as PREFIX:key:key:val where the keys are generally compound tags and values are the value input getting checked against. For example, in the case of CustomName tag which has text and color parameters, if you want to check if the color does not match `dark_aqua`, it would be formatted like `EQUAL:INVERT:CustomName:color:dark_aqua`",
  "gui.musictriggers.parameter.trigger_info.infernal.name": "Infernal Name",
  "gui.musictriggers.parameter.trigger_info.infernal.desc": "If this is set, one of a mob's infernal qualities must match it. Accepts a list of strings that must contain at least 1 non-empty entry. If 1 of the entries is set to ALL it will be active for a mob that has any sort of infernal quality",
  "gui.musictriggers.parameter.trigger_info.champion.name": "Champion Name",
  "gui.musictriggers.parameter.trigger_info.champion.desc": "If this is set, the mob must be a champion and the champion name must match this. You can check for multiple champion qualities with the ; character. Accepts any String value.",
  "gui.musictriggers.parameter.trigger_info.victory_id.name": "Victory ID",
  "gui.musictriggers.parameter.trigger_info.victory_id.desc": "The identifier of the referenced victory trigger. Activates when the correct percentage of mobs or bosses have been killed",
  "gui.musictriggers.parameter.trigger_info.victory_timeout.name": "Victory Timeout",
  "gui.musictriggers.parameter.trigger_info.victory_timeout.desc": "This the number of ticks after a reference trigger stops being active that a victory trigger can activate for if the conditions are met. Accepts any positive integer value.",
  "gui.musictriggers.parameter.trigger_info.victory_percentage.name": "Victory Percentage",
  "gui.musictriggers.parameter.trigger_info.victory_percentage.desc": "The percentage out of the number needed to activate the trigger that must be dead within the timeout value of the victory trigger",
  "gui.musictriggers.parameter.trigger_info.moon_phase.name": "Moon Phase",
  "gui.musictriggers.parameter.trigger_info.moon_phase.desc": "If this is set, the current phase of the moon in the world must match in order for the trigger to be active. 1 is full moon, 2 is waning gibbous, 3 is third quarter, 4 is waning crescent, 5 is new moon, 6 is waxing crescent, 7 is first quarter, 8 is waxing gibbous, and any other integer value will ignore the phase entirely.",
  "gui.musictriggers.parameter.trigger_info.light_type.name": "Light Type",
  "gui.musictriggers.parameter.trigger_info.light_type.desc": "Determines whether to check for block light (torches, glowstone, and other blocks that give off light), sky light (general day or ambient light), or either one. Accepts block, sky, or any. If the input does not match one of those, it will default to any.",
  "gui.musictriggers.parameter.trigger_info.is_whitelist.name": "Whitelist",
  "gui.musictriggers.parameter.trigger_info.is_whitelist.desc": "Determines whether or the the gamestage getting checked for must be present or absent from the player. Accepts true or false.",
  "gui.musictriggers.parameter.trigger_info.biome_category.name": "Biome Category",
  "gui.musictriggers.parameter.trigger_info.biome_category.desc": "This will activate whenever the player is in any biome that falls under the set category. Ignore this if you do not care about biome categories. Accepts a list of strings that must contain at least 1 non-empty entry.",
  "gui.musictriggers.parameter.trigger_info.rain_type.name": "Rain Type",
  "gui.musictriggers.parameter.trigger_info.rain_type.desc": "Determines the state of precipitation the biome must be in. Ignore this if you do not care about the precipitation of the biome. Accepts rain, snow, or none.",
  "gui.musictriggers.parameter.trigger_info.biome_temperature.name": "Biome Temperature",
  "gui.musictriggers.parameter.trigger_info.biome_temperature.desc": "The temperature of the biome must higher than this. Ignore this if you do not care about temperature. Accepts any decimal value.",
  "gui.musictriggers.parameter.trigger_info.check_lower_temp.name": "Check Lower Temperature",
  "gui.musictriggers.parameter.trigger_info.check_lower_temp.desc": "If this is true, it will check if the temperature of the biome is lower than the set value rather than higher. Ignore this if you do not care about temperature. Accepts true or false.",
  "gui.musictriggers.parameter.trigger_info.biome_rainfall.name": "Biome Rainfall Amount",
  "gui.musictriggers.parameter.trigger_info.biome_rainfall.desc": "The average rainfall of the biome must higher than this. Ignore this if you do not care about rainfall. Accepts any decimal value.",
  "gui.musictriggers.parameter.trigger_info.check_higher_rainfall.name": "Check Higher Rainfall",
  "gui.musictriggers.parameter.trigger_info.check_higher_rainfall.desc": "If this is false, it will check if the rainfall of the biome is lower than the set value rather than higher. Ignore this if you do not care about rainfall. Accepts true or false.",
  "gui.musictriggers.parameter.trigger_info.check_for_sky.name": "Check for Sky",
  "gui.musictriggers.parameter.trigger_info.check_for_sky.desc": "Determines whether or not to check if there is a block above the head of the player in order to determine if the position is really underground. Accepts true or false and the default is true.",
  "gui.musictriggers.parameter.trigger_info.check_above_level.name": "Check Above Level",
  "gui.musictriggers.parameter.trigger_info.check_above_level.desc": "If this is set to true, the Y level check will be reversed and it will only be active when the player is above the set level rather than below it. Check for Sky is ignored when this parameter is active. Accepts true or false.",
  "gui.musictriggers.parameter.trigger_info.toggle_save_status.name": "Toggle Save Status",
  "gui.musictriggers.parameter.trigger_info.toggle_save_status.desc": "Set to 1 to reset toggle status upon logging out or 2 to reset toggle status upon logging out and then have it get read in when logging in again.",
  "gui.musictriggers.parameter.trigger_info.max_tracks.name": "Max Tracks",
  "gui.musictriggers.parameter.trigger_info.max_tracks.desc": "If this is greater than 1 it correlates to the maximum number of tracks that can be played while this trigger is active before it will no longer be active. Resets when the conditions to activate the trigger are no longer met.",
  "gui.musictriggers.parameter.trigger_info.detection_y_ratio.name": "Detection Y Ratio",
  "gui.musictriggers.parameter.trigger_info.detection_y_ratio.desc": "Applies a ratio to detection range parameter on the y axis.",
  "gui.musictriggers.parameter.trigger_info.items.name": "Items",
  "gui.musictriggers.parameter.trigger_info.items.desc": "The way each element is parsed is \"modid:itemname:count:nbtdata\" where count and nbtdata are optional. Count is the number of items the stack must be equal to or greater than. For example items = [ \"minecraft:iron:3\" \"minecraft:gold\" ] will check to see if the item stack is either 3 or more iron or any amount of gold. Nbtdata uses identical logic to the mob nbt parameter which is as follows: \"This is a rather complex parameter that can deal with multiple different types of NBT data. If you are unfamiliar with how NBT data works, I would avoid using this parameter entirely. With that in mind, there 6 different prefixes to keep note of. These are KEY_PRESENT, VAL_PRESENT, GREATER, LESSER, EQUAL, and INVERT. KEY_PRESENT will check if a tag with a specific key is present and it is a compound tag. VAL_PRESENT will check if a value-based data parameter is present which is not a compound tag. GREATER will check if the referenced numerical NBT value is greater than the given value. LESSER will check if the referenced numerical NBT value is less than the given value. EQUAL is a catch-all parameter that can check if a numerical NBT value is equal to a given one, if a boolean NBT value is equivalent to the given input, or if a string NBT value matches the given input. It can also be used after a GREATER or LESSER check to allow the operation to check for matching values as well. INVERT will check if a boolean NBT value is the opposite of the given value. It can also be used after the KEY_PRESENT, VAL_PRESENT, or EQUAL checks to invert them. This parameter parses NBT data as PREFIX:key:key:val where the keys are generally compound tags and values are the value input getting checked against. For example, in the case of CustomName tag which has text and color parameters, if you want to check if the color does not match `dark_aqua`, it would be formatted like `EQUAL:INVERT:CustomName:color:dark_aqua`\"",
  "gui.musictriggers.parameter.trigger_info.slots.name": "Slots",
  "gui.musictriggers.parameter.trigger_info.slots.desc": "This is a list of strings that accepts MAINHAND for checking the item held in the main hand, OFFHAND for checking the item in the offhand, HOTBAR for checking the items in the player's hotbar, ARMOR for checking the items in the player's armor inventory, any indivisual slot number, or ANY for checking any slot.",
  "gui.musictriggers.parameter.universal.fade_in.name": "Universal Fade In",
  "gui.musictriggers.parameter.universal.fade_in.desc": "If the fade in parameter is not set for a trigger that accepts it, this value will be used instead.",
  "gui.musictriggers.parameter.universal.fade_out.name": "Universal Fade Out",
  "gui.musictriggers.parameter.universal.fade_out.desc": "If the fade out parameter is not set for a trigger that accepts it, this value will be used instead.",
  "gui.musictriggers.parameter.universal.persistence.name": "Universal Persistence",
  "gui.musictriggers.parameter.universal.persistence.desc": "If the persistence parameter is not set for a trigger that accepts it, this value will be used instead.",
  "gui.musictriggers.parameter.universal.trigger_delay.name": "Universal Trigger Delay",
  "gui.musictriggers.parameter.universal.trigger_delay.desc": "If the trigger delay parameter is not set for a trigger that accepts it, this value will be used instead.",
  "gui.musictriggers.parameter.universal.song_delay.name": "Universal Song Delay",
  "gui.musictriggers.parameter.universal.song_delay.desc": "If the song delay parameter is not set for a trigger that accepts it, this value will be used instead.",
  "gui.musictriggers.parameter.universal.start_delay.name": "Universal Start Delay",
  "gui.musictriggers.parameter.universal.start_delay.desc": "If the start delay parameter is not set for a trigger that accepts it, this value will be used instead.",
  "gui.musictriggers.parameter.universal.stop_delay.name": "Universal Stop Delay",
  "gui.musictriggers.parameter.universal.stop_delay.desc": "If the stop delay parameter is not set for a trigger that accepts it, this value will be used instead.",
  "gui.musictriggers.parameter.universal.volume.name": "Universal Volume",
  "gui.musictriggers.parameter.universal.volume.desc": "If the volume is not set for a song, this value will be used instead.",
  "gui.musictriggers.parameter.universal.pitch.name": "Universal Pitch",
  "gui.musictriggers.parameter.universal.pitch.desc": "If the pitch is not set for a song, this value will be used instead.",
  "gui.musictriggers.parameter.universal.play_once.name": "Universal Play Once",
  "gui.musictriggers.parameter.universal.play_once.desc": "If a specific play once is not set for a song, this value will be used instead.",
  "gui.musictriggers.parameter.universal.must_finish.name": "Universal Must Finish",
  "gui.musictriggers.parameter.universal.must_finish.desc": "Determines whether a song must finish before triggers can change if it is not specifically set for that song",
  "gui.musictriggers.parameter_list.empty": "Click to see the elements for",
  "gui.musictriggers.parameter_list.header": "Parameter Elements for",
  "gui.musictriggers.redirect.external": "Streamed Song",
  "gui.musictriggers.redirect.internal": "Registered Sound",
  "gui.musictriggers.redirect.is_used": "Is key used:",
  "gui.musictriggers.redirect.key": "Key",
  "gui.musictriggers.redirect.value": "Path",
  "gui.musictriggers.jukebox.invalid_key": "Song name not present in main config!",
  "gui.musictriggers.jukebox.valid_key": "Valid song name",
  "gui.musictriggers.jukebox.value": "Lang",
  "gui.musictriggers.selection.channel_parameter": "Select Registered Channel",
  "gui.musictriggers.selection.channel.triggers": "registered triggers",
  "gui.musictriggers.selection.channel.songs": "registered songs",
  "gui.musictriggers.selection.command": "Command",
  "gui.musictriggers.selection.comment.name": "Comment",
  "gui.musictriggers.selection.link": "Link to channel:",
  "gui.musictriggers.selection.link.from.hover": "Requires:",
  "gui.musictriggers.selection.link.to.hover": "Linked to triggers:",
  "gui.musictriggers.selection.group.jukebox": "Custom Record Info for Channel:",
  "gui.musictriggers.selection.group.links": "Links for Trigger:",
  "gui.musictriggers.selection.group.loops": "Loops for Song:",
  "gui.musictriggers.selection.group.main": "Songs and Triggers for Channel:",
  "gui.musictriggers.selection.group.potential_songs": "Available Songs for Channel:",
  "gui.musictriggers.selection.group.potential_triggers": "Available Triggers for Channel:",
  "gui.musictriggers.selection.group.redirect": "Redirect Info for Channel:",
  "gui.musictriggers.selection.group.registered_songs": "Songs",
  "gui.musictriggers.selection.group.registered_songs.hover": "Registered:",
  "gui.musictriggers.selection.group.registered_triggers": "Triggers",
  "gui.musictriggers.selection.group.registered_triggers.hover": "Registered:",
  "gui.musictriggers.selection.group.song_instance": "Parameter Info and Loops for Song:",
  "gui.musictriggers.selection.group.commands": "Commands for Channel:",
  "gui.musictriggers.selection.group.songs": "Add Song",
  "gui.musictriggers.selection.group.song_resources": "Sounds Registered to the Vanilla Engine",
  "gui.musictriggers.selection.group.toggles": "Toggles for Channel:",
  "gui.musictriggers.selection.group.transitions": "Transitions for Channel:",
  "gui.musictriggers.selection.loops": "Loops",
  "gui.musictriggers.selection.loop": "Loop",
  "gui.musictriggers.selection.loop.from": "From",
  "gui.musictriggers.selection.loop.set_loops": "Registered Loops:",
  "gui.musictriggers.selection.loop.to": "To",
  "gui.musictriggers.selection.multi_triggers": "Select Multiple Triggers",
  "gui.musictriggers.selection.potential_images": "Available Resources for Image Cards",
  "gui.musictriggers.selection.song.load": "Load Order:",
  "gui.musictriggers.selection.song.triggers": "Assigned Triggers:",
  "gui.musictriggers.selection.song_info": "Song Info",
  "gui.musictriggers.selection.image_card": "Image Card",
  "gui.musictriggers.selection.title_card": "Title Card",
  "gui.musictriggers.selection.title.titles": "Potential Titles",
  "gui.musictriggers.selection.title.subtitles": "Potential Subtitles",
  "gui.musictriggers.selection.toggle": "Toggle",
  "gui.musictriggers.selection.toggle.potential_conditions": "Potential Toggle Conditions",
  "gui.musictriggers.selection.toggle_condition.trigger": "Toggle Condition From:",
  "gui.musictriggers.selection.toggle_condition.target": "Toggle Condition To:",
  "gui.musictriggers.selection.toggle.instance": "Toggle Instance",
  "gui.musictriggers.selection.toggle.load_order": "Load Order:",
  "gui.musictriggers.selection.toggles.from": "assigned conditions to",
  "gui.musictriggers.selection.toggles.to": "assigned conditions from",
  "gui.musictriggers.selection.target.name": "Toggle Target",
  "gui.musictriggers.selection.trigger.name": "Toggle Trigger",
  "gui.musictriggers.selection.trigger.is_registered": "In use",
  "gui.musictriggers.selection.trigger.needs_id": "Requires an identifier",
  "gui.musictriggers.selection.trigger.not_registered": "Not used",
  "gui.musictriggers.selection.trigger.registered_id": "In use:",
  "gui.musictriggers.selection.trigger_info": "Trigger Info",
  "gui.musictriggers.selection.universal_song": "Universal Song Parameters",
  "gui.musictriggers.selection.universal_trigger": "Universal Trigger Parameters",
  "gui.musictriggers.toggle.nickname": "Nickname of Toggle Set:",
  "gui.musictriggers.toggle.triggers": "Affected Triggers:",
  "gui.musictriggers.toggle.trigger.condition": "Trigger Condition:",
  "gui.musictriggers.toggle.trigger1": "when triggers get toggled on",
  "gui.musictriggers.toggle.trigger2": "when triggers are playable",
  "gui.musictriggers.toggle.trigger3": "when triggers are active",
  "gui.musictriggers.toggle.target.condition": "Target Condition:",
  "gui.musictriggers.toggle.target.true": "activate targets",
  "gui.musictriggers.toggle.target.false": "deactivate targets",
  "gui.musictriggers.toggle.target.switch": "switch activation of targets",
  "gui.musictriggers.song.volume": "Volume",
  "gui.musictriggers.song.pitch": "Pitch",
  "gui.musictriggers.trigger": "Trigger",
  "gui.musictriggers.trigger.identifier": "Identifier",
  "gui.musictriggers.trigger.priority": "Priority",
  "gui.musictriggers.trigger.menu": "Menu",
  "gui.musictriggers.trigger.generic": "Generic",
  "gui.musictriggers.trigger.difficulty": "Difficulty",
  "gui.musictriggers.trigger.time": "Time",
  "gui.musictriggers.trigger.light": "Light",
  "gui.musictriggers.trigger.height": "Height",
  "gui.musictriggers.trigger.raining": "Raining",
  "gui.musictriggers.trigger.storming": "Storming",
  "gui.musictriggers.trigger.snowing": "Snowing",
  "gui.musictriggers.trigger.lowhp": "Low HP",
  "gui.musictriggers.trigger.dead": "Dead",
  "gui.musictriggers.trigger.creative": "Creative",
  "gui.musictriggers.trigger.spectator": "Spectator",
  "gui.musictriggers.trigger.riding": "Riding",
  "gui.musictriggers.trigger.pet": "Pet",
  "gui.musictriggers.trigger.underwater": "Underwater",
  "gui.musictriggers.trigger.elytra": "Elytra",
  "gui.musictriggers.trigger.fishing": "Fishing",
  "gui.musictriggers.trigger.drowning": "Drowning",
  "gui.musictriggers.trigger.home": "Home",
  "gui.musictriggers.trigger.dimension": "Dimension",
  "gui.musictriggers.trigger.biome": "Biome",
  "gui.musictriggers.trigger.structure": "Structure",
  "gui.musictriggers.trigger.mob": "Mob",
  "gui.musictriggers.trigger.victory": "Victory",
  "gui.musictriggers.trigger.gui": "GUI",
  "gui.musictriggers.trigger.effect": "Effect",
  "gui.musictriggers.trigger.zones": "Zones",
  "gui.musictriggers.trigger.pvp": "PVP",
  "gui.musictriggers.trigger.advancement": "Advancement",
  "gui.musictriggers.trigger.statistic": "Statistic",
  "gui.musictriggers.trigger.command": "Command",
  "gui.musictriggers.trigger.inventory": "Inventory",
  "gui.musictriggers.trigger.blockentity": "Block Entity",
  "gui.musictriggers.trigger.loading": "Loading",
  "gui.musictriggers.trigger.raid": "Raid",
  "gui.musictriggers.trigger.gamestage": "Gamestage",
  "gui.musictriggers.trigger.bloodmoon": "Bloodmoon",
  "gui.musictriggers.trigger.harvestmoon": "Harvestmoon",
  "gui.musictriggers.trigger.fallingstars": "Falling Stars",
  "gui.musictriggers.trigger.bluemoon": "Bluemoon",
  "gui.musictriggers.trigger.rainintensity": "Rain Intensity",
  "gui.musictriggers.trigger.tornado": "Tornado",
  "gui.musictriggers.trigger.hurricane": "Hurricane",
  "gui.musictriggers.trigger.sandstorm": "Sandstorm",
  "gui.musictriggers.trigger.acidrain": "Acid Rain",
  "gui.musictriggers.trigger.blizzard": "Blizzard",
  "gui.musictriggers.trigger.cloudy": "Cloudy",
  "gui.musictriggers.trigger.lightrain": "Light Rain",
  "gui.musictriggers.trigger.season": "Season"
}